//
//  TablePresenter.swift
//  BancaDigital
//
//  Created Jorge Parra on 21/08/21.
//  Copyright Â© 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Carlos Torres
//

import UIKit

class TablePresenter: TablePresenterProtocol, TableInteractorOutputProtocol {
  
 
    var view: TableViewProtocol?
    var interactor: TableInteractorInputProtocol?
    var wireFrame: TableWireframeProtocol?
    var adapter : ApiAdapterCallImageTextAndImageModel?
    var listFavoriteShows: [FavoriteShows] =  []
    var listImageTextAndImageModel: [ImageTextAndImageModel]?{
        didSet {
            view?.apiResponse(with: listImageTextAndImageModel!)
        }
    }
    

    
    func callDetail(with index: Int) {
        wireFrame?.callDetail(with: listFavoriteShows[index])
        
    }
    
    func didDelete(with id : Int) {
        view?.didDelete(answer: id)
    }
    
    
    func callAPI(with type: Int) {
        interactor?.callAPI(with: type){ [weak self] response in
                guard let self = self else {return}
                switch response {
                case .succesfull(list: let list) :
                    self.adapter = ApiAdapterCallImageTextAndImageModel(list)
                    self.listImageTextAndImageModel = self.adapter!.getList()
                case .error:
                    self.view?.callErrorMessage()
                case .core( list: let list) :
                    self.listFavoriteShows = list
                    self.listImageTextAndImageModel = list.map{
                        ImageTextAndImageModel(name: $0.name ?? "", url: $0.image ?? "", isFavorite: true, id: Int($0.id) )
                    }
                }
            }
    }
    func deleteCoredata(with id: Int) {
       
        interactor?.deleteCoredata(with: id )
    }
    
    
    func saveCoredata(with position : Int) {
        guard let apiShowsResponseElement = adapter?.getAPIShowsResponseElement(with: position) else {fatalError()}
        interactor?.saveCoredata(apiShowsResponseElement)
    }
    
    

}




